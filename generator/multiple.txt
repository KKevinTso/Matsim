classdef %s < matsim.library.block
%%%s Creates a simulink %s block.
%% Example:
%%   input1 = Constant(1);
%%   input2 = Constant(2);
%%   input3 = FromWorkspace('var3');
%%   blk = %s({input1,input2,input3},'Name','my%s');
%% 
%%   See also BLOCK.

    properties

    end
    
    methods
        function this = %s(varargin)
            p = inputParser;
            p.CaseSensitive = false;
            p.KeepUnmatched = true;
            addOptional(p,'inputs',[],@(x) isnumeric(x) || iscell(x) || isa(x,'matsim.library.block'));
%s
            addParamValue(p,'parent','',@(x) ischar(x) || ishandle(x) || isa(x,'matsim.library.block') || isa(x,'matsim.library.simulation'));
            parse(p,varargin{:})
            
            inputs = p.Results.inputs;
            if ~iscell(inputs)
                inputs = {inputs};
            end
            
%s
            parent = matsim.helpers.getValidParent(inputs{:},p.Results.parent);
            args = matsim.helpers.validateArgs(p.Unmatched);
            
            if isempty(parent)
                parent = gcs;
            end
            
            this = this@matsim.library.block('model','%s','BlockName','%s','parent',parent,args{:});
            if matsim.helpers.isArgSpecified(p,'inputs')
                this.setInputs(inputs);
            end

%s
        end
    end
end

